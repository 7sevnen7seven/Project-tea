from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_marshmallow import Marshmallow

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'
db = SQLAlchemy(app)
ma = Marshmallow(app)

class Project(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(120), unique=True, nullable=False)
    description = db.Column(db.String(120), nullable=False)

class ProjectSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = Project
        include_fk = True

project_schema = ProjectSchema()
projects_schema = ProjectSchema(many=True)

@app.route('/project', methods=['POST'])
def add_project():
    name = request.json['name']
    description = request.json['description']
    new_project = Project(name=name, description=description)
    db.session.add(new_project)
    db.session.commit()
    return project_schema.jsonify(new_project)

@app.route('/project', methods=['GET'])
def get_projects():
    all_projects = Project.query.all()
    result = projects_schema.dump(all_projects)
    return jsonify(result)

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)
